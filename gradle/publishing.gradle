import java.text.SimpleDateFormat

/*
 * Copyright 2014-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// configuration of the Maven artifacts
apply plugin: 'maven-publish'

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
            'Build-Date': project.buildDate,
            'Build-Time': project.buildTime,
            'Build-Revision': versioning.info.commit,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
        )
    }
    metaInf {
        from(rootProject.files('.')) {
            include 'LICENSE*'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            pom.withXml {
                def Node root = asNode()

                root.appendNode('name', 'Gradle Plugin for JMH')
                root.appendNode('description', project.project_description)
                root.appendNode('url', project.project_website)

                def issues = root.appendNode( 'issueManagement' )
                issues.appendNode( 'system', 'github' )
                issues.appendNode( 'url', project.project_issues )

                def scm = root.appendNode( 'scm' )
                scm.appendNode( 'url', project.project_website )
                scm.appendNode( 'connection', 'scm:git:' + project.project_vcs )
                scm.appendNode( 'developerConnection', 'scm:git:git@github.com:melix/jmh-gradle-plugin.git' )

                def license = root.appendNode( 'licenses' ).appendNode( 'license' );
                license.appendNode( 'name', 'The Apache Software License, Version 2.0' )
                license.appendNode( 'url', 'http://www.apache.org/licenses/LICENSE-2.0.txt' )
                license.appendNode( 'distribution', 'repo' )

                def dev = root.appendNode( 'developers' ).appendNode( 'developer' );
                dev.appendNode( 'id', 'melix' )
                dev.appendNode( 'name', 'CÃ©dric Champeau' )
                dev.appendNode( 'organization', 'Groovy' )
                dev.appendNode( 'organizationUrl', 'http://groovy-lang.org' )
            }
        }
    }
}

pluginBundle {
    website = project.project_website
    vcsUrl = project.project_vcs
    description = project.project_description
    tags = ['jmh']

    plugins {
        jmhPlugin {
            id = project.group + '.jmh'
            displayName = 'Gradle JMH plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
        version = project.version
    }
}